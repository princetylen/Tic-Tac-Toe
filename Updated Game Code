def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_win(board, player):
    for row in board:
        if all([s == player for s in row]):
            return True
    for col in range(3):
        if all([board[row][col] == player for row in range(3)]):
            return True
    if all([board[i][i] == player for i in range(3)]) or all([board[i][2 - i] == player for i in range(3)]):
        return True
    return False

def is_full(board):
    return all(all(s != " " for s in row) for row in board)

def main():
    board = [[" " for _ in range(3)] for _ in range(3)]
    players = ["X", "O"]
    current_player = 0

    while not is_full(board):
        print_board(board)
        print(f"Player {players[current_player]}'s turn")
        row = int(input("Enter row (1-3): ")) - 1
        col = int(input("Enter column (1-3): ")) - 1

        if board[row][col] == " ":
            board[row][col] = players[current_player]
            if check_win(board, players[current_player]):
                print_board(board)
                print(f"Player {players[current_player]} wins!")
                break
            current_player = (current_player + 1) % 2
        else:
            print("Space occupied. Try again.")

    if not check_win(board, players[0]) and not check_win(board, players[1]):
        print_board(board)
        print("It's a draw!")

if __name__ == "__main__":
    main()
